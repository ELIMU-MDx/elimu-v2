name: Tests

on:
  push:
    paths:
      - '**.php'
      - 'composer.lock'
  workflow_dispatch:

jobs:
  test:
    #  skip test for ci commits
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    runs-on: ubuntu-latest

    env:
      extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysqli, bcmath, soap, intl, gd, exif, iconv, imagick, redis
      php:  ${{ inputs.php }}

    name: Test - PHP 8.3

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare The Environment
        run: cp .env.example .env

      - name: Setup PHP extensions
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ env.php }}
          extensions: ${{ env.extensions }}
          key: php-extensions-cache-v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: ${{ env.extensions }}
          coverage: none

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: always-upload-cache
        uses: pat-s/always-upload-cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-interaction --optimize-autoloader
      - name: Generate Application Key
        run: php artisan key:generate

      - name: Execute tests
        run: vendor/bin/pest --ci
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_DATABASE: test
          DB_PASSWORD: password
          SCOUT_DRIVER: 'null'

      - name: Dump logs
        if: failure()
        run: cat storage/logs/*.log || true
