name: Unit Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.0
    services:
          # mysql-service Label used to access the service container
          mysql-service:
            # Docker Hub image (also with version)
            image: mysql:8.0
            env:
              ## Accessing to Github secrets, where you can store your configuration
              MYSQL_ROOT_PASSWORD: 12345
              MYSQL_DATABASE: elimu_test
            ports:
              - 3306/tcp
            options: >-
              --health-cmd="mysqladmin ping"
              --health-interval=10s
              --health-timeout=5s
              --health-retries=3
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
        extensions: mbstring, dom, fileinfo, mysql
        coverage: xdebug #optional
    - uses: actions/checkout@v2
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        # Use composer.json for key, if composer.lock is not committed.
        # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
    - name: Prepare the application
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
        php artisan key:generate
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Clear Config
      run: php artisan config:clear
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_HOST: mysql
        DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        DB_CONNECTION: mysql
        DB_DATABASE: elimu_test
        DB_PASSWORD: 12345
      run: vendor/bin/phpunit --coverage-text
